<#
.SYNOPSIS
	Pushes packages generated by Pack to NuGet.
#>
[CmdletBinding()]
param (
	[Parameter(Mandatory=$true)]
	[string] $ApiKey
)

$projects = @(
	'RouteVersioning'
	'RouteVersioning.OpenApi'
)

try {
	Push-Location .
	Set-Location (Join-Path $PSScriptRoot '..' -Resolve)

	# Get version.
	$version = "$(
		Get-Content 'Directory.Build.props' `
			| Out-String `
			| Select-Xml 'Project/PropertyGroup/Version'
	)"

	$primaryPackages = $projects | ForEach-Object { "$_.$version.nupkg" }
	$symbolPackages = $projects | ForEach-Object { "$_.$version.snupkg" }

	# Require all packages to be present.
	$absent = @($primaryPackages) + @($symbolPackages) | Where-Object { -not (Test-Path "publish/$_") }
	if ($absent.Length -ne 0) {
		throw "Absent packages: $absent"
	}

	# Push packages.
	foreach ($package in $primaryPackages) {
		dotnet nuget push "publish/$package" `
			--api-key $ApiKey `
			--source 'https://api.nuget.org/v3/index.json'

		# The symbol package present adjacent to the primary package is automatically pushed.
	}
}
finally {
	Pop-Location
}
